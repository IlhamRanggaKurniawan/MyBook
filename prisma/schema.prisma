// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum LoanStatus {
  borrowed
  returned
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id           String    @id @default(uuid())
  title        String
  publisher    String
  author       String
  isbn         String    @unique
  image        String    @unique
  pages        Int
  loan         Loan[]
  categoryName String?
  category     Category? @relation(fields: [categoryName], references: [name], onDelete: SetNull)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
  id        String   @id @default(uuid())
  name      String
  nis       Int      @unique
  class     String
  loan      Loan[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Loan {
  id         String     @id @default(uuid())
  bookId     String
  studentId  String
  loanDate   DateTime   @default(now())
  returnDate DateTime?
  status     LoanStatus @default(borrowed)
  book       Book       @relation(fields: [bookId], references: [id], onDelete: Cascade)
  student    Student    @relation(fields: [studentId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}
